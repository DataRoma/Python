# 1. В начале у пользователя запрашивается количество билетов, которые он хочет приобрести на мероприятие.

# 2. Далее для каждого билета запрашивается возраст посетителя, в соответствии со значением которого выбирается стоимость:

# Если посетителю конференции менее 18 лет, то он проходит на конференцию бесплатно.
# От 18 до 25 лет — 990 руб.
# От 25 лет — полная стоимость 1390 руб.
# 3. В результате программы выводится сумма к оплате. При этом, если человек регистрирует больше трёх человек на конференцию, то дополнительно получает 10% скидку на полную стоимость заказа.

amount = int(input("How many tickets you need? - "))
total = 0

for i in range(1,amount + 1):
    age = int(input("Your age? - "))
    if age < 18:
        continue
    if age >= 18 and age < 25:
        total+= 990
    if age >= 25:
        total+= 1390
if  amount > 3:
    total= total/100*90
print("Total -", int(total))


# list_ = [-5, 2, 4, 8, 12, -7, 5]
# # Объявим переменную, в которой будем хранить индекс отрицательного элемента
# index_negative = None
#
# for i, value in enumerate(list_):
#     if value < 0:
#         print("Отрицательное число: ", value)
#         index_negative = value  # перезаписываем значение индекса
#         print("Новый индекс отрицательного числа: ", index_negative)
#     else:
#         print("Положительное число: ", value)
#     print("---")
# print("Конец цикла")
# print()
# print("Ответ: индекс последнего отрицательного элемента = ", index_negative)
# #Но он не знал, что есть функция enumerate. Ваша задача — подправить код так, чтобы он работал с помощью функции enumerate.


# n = int(input("Введите число\n"))
#
# while True:
#     if n % 2 == 0:
#         n = n // 2
#     else:
#         n = (n * 3 + 1) // 2
#     print(n)
#
#     if n == 1:
#         print("Done")
#         break

#heads = 35  # количество голов
#legs = 94 #  количество ног

# for r in range(heads + 1):  # количество кроликов
#     for ph in range(heads + 1):  # количество фазанов
#         #  если суммарное количество голов превышено или ног превышено, то переходим на следующий шаг цикла
#         if (r + ph) > heads or \
#             (r * 4 + ph * 2) > legs:
#             continue
#         if (r + ph) == heads and (r * 4 + ph * 2) == legs:
#             print("Количество кроликов", r)
#             print("Количество фазанов", ph)
#             print("---")

# Представим, что на вход нашей программы подается число. А мы хотим проверить, является ли оно целым, находится ли в определенном промежутке (например от 100 до 999 включительно), да еще и делится ли на 2 и 3 одновременно. Очень много условий. И такое случается в реальных проектах.
#
# Решение в лоб — использовать вложенные условные операторы. Один if внутри другого if и так далее. Наверняка есть способ сделать это быстрее и эффективнее, но для начала попробуем написать решение в таком варианте, чтобы было с чем сравнить:
# T = [[i*j for j in range(1,10)] for i in range(1,11)]
# print(T)

# L = [i for i in range(10)]
# # 0 1 2 3 4 5 6 7 8 9
# M = [i for i in range(10,0,-1)]
# # 10 9 8 7 6 5 4 3 2 1
#
# N = [a * b for a, b in zip(L, M)]

# Задание на самопроверку.
#
# Реализуйте программу, которая сжимает последовательность символов. На вход подается последовательность вида:
#
# aaabbccccdaa
# Необходимо вывести строку, состоящую из символов и количества повторений этого символа. Вывод должен выглядеть как:
#
# a3b2c4d1a2
#
# text = input()  # получаем строку
#
# first = text[0]  # сохраняем первый символ
# count = 0  # заводим счетчик
# result = ''  # и результирующую строку
#
# for c in text:
#     if c == first:  # если символ совпадает с сохраненным,
#         count += 1  # то увеличиваем счетчик
#     else:
#         result += first + str(count)  # иначе - записываем в результат
#         first = c  # и обновляем сохраненный символ с его счетчиком
#         count = 1
#
# result += first + str(count)  # и добавляем в результат последний символ
# print(result)

# Для онлайн-конференции необходимо написать программу, которая будет подсчитывать общую стоимость билетов. Программа должна работать следующим образом:
#
# 1. В начале у пользователя запрашивается количество билетов, которые он хочет приобрести на мероприятие.
#
# 2. Далее для каждого билета запрашивается возраст посетителя, в соответствии со значением которого выбирается стоимость:
#
# Если посетителю конференции менее 18 лет, то он проходит на конференцию бесплатно.
# От 18 до 25 лет — 990 руб.
# От 25 лет — полная стоимость 1390 руб.
# 3. В результате программы выводится сумма к оплате. При этом, если человек регистрирует больше трёх человек на конференцию, то дополнительно получает 10% скидку на полную стоимость заказа.
#
# Для проверки загрузите полученное решение на GitHub и прикрепите ссылку.

